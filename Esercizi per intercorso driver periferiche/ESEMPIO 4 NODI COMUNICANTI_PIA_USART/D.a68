*************************************************************************************************
* D trasmette un carattere ad A
	

************************************************************
**********AREA DATI**************************************
	ORG	$8000
CHAR	DC.B	$FF
TIMER	DC.B	$A3	*contatore che decremento per far scattare una sorta di timer ed inviare il carattere ad A

***********************************************************
***********AREA MAIN*********************************	
	ORG    $8200

USARTD	EQU		$2002		;registro dato USART
USARTC	EQU		$2003		;registro di controllo USART

MAIN	JSR    INITUSART	;inizializza USART

	MOVE.W	SR,D0	;legge il registro di stato
	ANDI.W	#$D8FF,D0 ;maschera per reg stato (stato utente, int abilitati)
	MOVE.W	D0,SR	;pone liv int a 000


	MOVEA.L	#USARTD,A1	;indirizzo registro dato
	MOVEA.L	#USARTC,A2	;indirizzo registro controllo/stato

	MOVE.B	CHAR,D1	;preparo il carattere da trasmettere in un registro
	
*aspetto un tempo definito dal timer prima di trasmettere:
	MOVE.B	TIMER,D0
WAITtimer		SUB	#1,D0
	BNE	WAITtimer


CHECKDSR	MOVE.B	(A2),D0			;Controlla se è attivato il segnale DSR della USART ed in caso affermativo trasmette,
	ANDI.B		#$80,D0		;altrimenti attende. Poichè la configurazione prevede che DTR=1 in entrambi
*						i sistemi, e poichè tale segnale è direttamente connesso con DSR 
*						dell'altra seriale, la connessione è stabilita. Nota che anche RTS è alto in entrambi,
*						quindi anche la successiva fase di sincronizzazione è correttamente completata.
	BEQ		CHECKDSR		


INVIO	MOVE.B	D1,(A1)		;invio carattere sulla seriale
	
LOOP  	JMP LOOP	;ciclo caldo dove il processore attende interrupt		


* *****        INIZIALIZZAZIONE USART        *****

******************************************************************************************
*	PRIMO ACCESSO IN SCRITTURA INDIRIZZO DISPARI => REGISTRO MODE	
*									
*	MODE |  0  |  1  |  0  |  1  |  1   1  |  0  |  1  |							
*	              |       |      |      |        |        |      |____b0=0 Trasmissione Sincrona, b0=1 Asincrona			
*	              |       |      |      |        |        |_______ b1 non utilizzato					
*	              |       |      |      |        |____________b3b2="00"(5bit/dato), "01"(6bit/dato), "10"(7bit/dato), "11"(8bit/dato)					
*	              |       |      |      |________________ b4=0: non trasmette bit di parità, b4=1: lo trasmette			
*	              |       |      |____________________b5=0: parità pari, b5=1: parità dispari	    	
*	              |       |________________________b6=0: 1 bit di stop, b6=1: 2 bit di stop					
*	              |____________________________b7=0: 1 carattere di sync, b7=1: 2 caratteri di sync (in trasmissione sincrona)	
*
*****************************************************************************************   
*
INITUSART	MOVE.B		#$5D,USARTC	trasmissione asincrona, 8 bit di informazione
*							bit di parità dispari e 2 bit di stop
*
*****************************************************************************************
*	SECONDO ACCESSO IN SCRITTURA INDIRIZZO DISPARI => REGISTRO CNTRL	
*									
*	MODE |  0  |  0  |  1  |  0  |  0  | 0  |  1  |  1  |							
*	              |       |      |      |      |     |      |      |____b0=1: abilita trasmettitore, b0=0: disabilita trasmettitrore			
*	              |       |      |      |      |     |      |_______ b1=1: attiva DTR, b1=0: disattiva DTR					
*	              |       |      |      |      |     |___________b2=1: abitilita ricevitore, b0=0: disabilita ricevitore					
*	              |       |      |      |      |______________b3 non utilizzato			
*	              |       |      |      |_________________b4=1: cancella bit di errore, b4=0: non cancella	    	
*	              |       |      |_____________________b5=1: attiva RTS, b6=0: disattiva RTS					
*	              |       |_________________________b6=1: resetta l'interfaccia seriale	
*	              |_____________________________b7=1: porta il ricevitore nello stato HUNT in cui cerca i caratteri di sincronismo sync
*								(in comunicazione sincrona)
*
******************************************************************************************
	MOVE.B		#$23,USARTC	abilita trasmettitore
*						e attiva i segnali di handshaking.
*
	RTS


*****************************************************************************************
* ISR trasmissione (Interruzione su TxRDY: la seriale ha trasmesso un carattere ) *
* mappata su autovettore 28, indirizzo $70 in ROM
* la ISR non fa nulla ma è comunque presente perchè non è possibile disabilitare 
* le interrupt
*****************************************************************************************
*
	ORG $8800		

	RTE



	END	MAIN





















